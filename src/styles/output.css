/*! tailwindcss v2.2.7 | MIT License | https://tailwindcss.com */

/*! modern-normalize v1.1.0 | MIT License | https://github.com/sindresorhus/modern-normalize */

/*
Document
========
*/

/**
Use a better box model (opinionated).
*/

*,
::before,
::after {
  box-sizing: border-box;
}

/**
Use a more readable tab size (opinionated).
*/

html {
  -moz-tab-size: 4;
  tab-size: 4;
}

/**
1. Correct the line height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
*/

html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/*
Sections
========
*/

/**
Remove the margin in all browsers.
*/

body {
  margin: 0;
}

/**
Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)
*/

body {
  font-family:
		system-ui,
		-apple-system, /* Firefox supports this but not yet `system-ui` */
		'Segoe UI',
		Roboto,
		Helvetica,
		Arial,
		sans-serif,
		'Apple Color Emoji',
		'Segoe UI Emoji';
}

/*
Grouping content
================
*/

/**
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
*/

hr {
  height: 0;
  /* 1 */
  color: inherit;
  /* 2 */
}

/*
Text-level semantics
====================
*/

/**
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr[title] {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/**
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/**
1. Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)
2. Correct the odd 'em' font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family:
		ui-monospace,
		SFMono-Regular,
		Consolas,
		'Liberation Mono',
		Menlo,
		monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/**
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/**
Prevent 'sub' and 'sup' elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
Tabular data
============
*/

/**
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
*/

table {
  text-indent: 0;
  /* 1 */
  border-color: inherit;
  /* 2 */
}

/*
Forms
=====
*/

/**
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */
}

/**
Remove the inheritance of text transform in Edge and Firefox.
1. Remove the inheritance of text transform in Firefox.
*/

button,
select {
  /* 1 */
  text-transform: none;
}

/**
Correct the inability to style clickable types in iOS and Safari.
*/

button,
[type='button'],
[type='reset'],
[type='submit'] {
  -webkit-appearance: button;
}

/**
Remove the inner border and padding in Firefox.
*/

::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
Restore the focus styles unset by the previous rule.
*/

:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
Remove the additional ':invalid' styles in Firefox.
See: https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/**
Remove the padding so developers are not caught out when they zero out 'fieldset' elements in all browsers.
*/

legend {
  padding: 0;
}

/**
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/**
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/**
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/**
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to 'inherit' in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/*
Interactive
===========
*/

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/**
 * Manually forked from SUIT CSS Base: https://github.com/suitcss/base
 * A thin layer on top of normalize.css that provides a starting point more
 * suitable for web applications.
 */

/**
 * Removes the default spacing and border for appropriate elements.
 */

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

button {
  background-color: transparent;
  background-image: none;
}

fieldset {
  margin: 0;
  padding: 0;
}

ol,
ul {
  list-style: none;
  margin: 0;
  padding: 0;
}

/**
 * Tailwind custom reset styles
 */

/**
 * 1. Use the user's configured `sans` font-family (with Tailwind's default
 *    sans-serif font stack as a fallback) as a sane default.
 * 2. Use Tailwind's default "normal" line-height so the user isn't forced
 *    to override it to ensure consistency even when using the default theme.
 */

html {
  font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  /* 1 */
  line-height: 1.5;
  /* 2 */
}

/**
 * Inherit font-family and line-height from `html` so users can set them as
 * a class directly on the `html` element.
 */

body {
  font-family: inherit;
  line-height: inherit;
}

/**
 * 1. Prevent padding and border from affecting element width.
 *
 *    We used to set this in the html element and inherit from
 *    the parent element for everything else. This caused issues
 *    in shadow-dom-enhanced elements like <details> where the content
 *    is wrapped by a div with box-sizing set to `content-box`.
 *
 *    https://github.com/mozdevs/cssremedy/issues/4
 *
 *
 * 2. Allow adding a border to an element by just adding a border-width.
 *
 *    By default, the way the browser specifies that an element should have no
 *    border is by setting it's border-style to `none` in the user-agent
 *    stylesheet.
 *
 *    In order to easily add borders to elements by just setting the `border-width`
 *    property, we change the default border-style for all elements to `solid`, and
 *    use border-width to hide them instead. This way our `border` utilities only
 *    need to set the `border-width` property instead of the entire `border`
 *    shorthand, making our border utilities much more straightforward to compose.
 *
 *    https://github.com/tailwindcss/tailwindcss/pull/116
 */

*,
::before,
::after {
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: currentColor;
  /* 2 */
}

/*
 * Ensure horizontal rules are visible by default
 */

hr {
  border-top-width: 1px;
}

/**
 * Undo the `border-style: none` reset that Normalize applies to images so that
 * our `border-{width}` utilities have the expected effect.
 *
 * The Normalize reset is unnecessary for us since we default the border-width
 * to 0 on all elements.
 *
 * https://github.com/tailwindcss/tailwindcss/issues/362
 */

img {
  border-style: solid;
}

textarea {
  resize: vertical;
}

input::-webkit-input-placeholder, textarea::-webkit-input-placeholder {
  opacity: 1;
  color: #a1a1aa;
}

input:-ms-input-placeholder, textarea:-ms-input-placeholder {
  opacity: 1;
  color: #a1a1aa;
}

input::placeholder,
textarea::placeholder {
  opacity: 1;
  color: #a1a1aa;
}

button,
[role="button"] {
  cursor: pointer;
}

table {
  border-collapse: collapse;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/**
 * Reset links to optimize for opt-in styling instead of
 * opt-out.
 */

a {
  color: inherit;
  text-decoration: inherit;
}

/**
 * Reset form element properties that are easy to forget to
 * style explicitly so you don't inadvertently introduce
 * styles that deviate from your design system. These styles
 * supplement a partial reset that is already applied by
 * normalize.css.
 */

button,
input,
optgroup,
select,
textarea {
  padding: 0;
  line-height: inherit;
  color: inherit;
}

/**
 * Use the configured 'mono' font family for elements that
 * are expected to be rendered with a monospace font, falling
 * back to the system monospace stack if there is no configured
 * 'mono' font family.
 */

pre,
code,
kbd,
samp {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
}

/**
 * 1. Make replaced elements `display: block` by default as that's
 *    the behavior you want almost all of the time. Inspired by
 *    CSS Remedy, with `svg` added as well.
 *
 *    https://github.com/mozdevs/cssremedy/issues/14
 * 
 * 2. Add `vertical-align: middle` to align replaced elements more
 *    sensibly by default when overriding `display` by adding a
 *    utility like `inline`.
 *
 *    This can trigger a poorly considered linting error in some
 *    tools but is included by design.
 * 
 *    https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210
 */

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}

/**
 * Constrain images and videos to the parent width and preserve
 * their intrinsic aspect ratio.
 *
 * https://github.com/mozdevs/cssremedy/issues/14
 */

img,
video {
  max-width: 100%;
  height: auto;
}

/**
 * Ensure the default browser behavior of the `hidden` attribute.
 */

[hidden] {
  display: none;
}

*, ::before, ::after {
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-transform: translateX(var(--tw-translate-x)) translateY(var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  --tw-border-opacity: 1;
  border-color: rgba(228, 228, 231, var(--tw-border-opacity));
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-ring-inset: var(--tw-empty,/*!*/ /*!*/);
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgba(59, 130, 246, 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-blur: var(--tw-empty,/*!*/ /*!*/);
  --tw-brightness: var(--tw-empty,/*!*/ /*!*/);
  --tw-contrast: var(--tw-empty,/*!*/ /*!*/);
  --tw-grayscale: var(--tw-empty,/*!*/ /*!*/);
  --tw-hue-rotate: var(--tw-empty,/*!*/ /*!*/);
  --tw-invert: var(--tw-empty,/*!*/ /*!*/);
  --tw-saturate: var(--tw-empty,/*!*/ /*!*/);
  --tw-sepia: var(--tw-empty,/*!*/ /*!*/);
  --tw-drop-shadow: var(--tw-empty,/*!*/ /*!*/);
  --tw-filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.fixed {
  position: fixed;
}

.absolute {
  position: absolute;
}

.top-0 {
  top: 0px;
}

.right-0 {
  right: 0px;
}

.right-full {
  right: 100%;
}

.top-5 {
  top: 1.25rem;
}

.right-6 {
  right: 1.5rem;
}

.left-0 {
  left: 0px;
}

.z-\[999\] {
  z-index: 999;
}

.m-\[0\2c auto\] {
  margin: 0,auto;
}

.m-\[16px\2c auto\2c 0\2c auto\] {
  margin: 16px,auto,0,auto;
}

.m-\[0\2c auto\2c 0\2c auto\] {
  margin: 0,auto,0,auto;
}

.mx-0 {
  margin-left: 0px;
  margin-right: 0px;
}

.my-auto {
  margin-top: auto;
  margin-bottom: auto;
}

.my-8 {
  margin-top: 2rem;
  margin-bottom: 2rem;
}

.mb-4 {
  margin-bottom: 1rem;
}

.mb-8 {
  margin-bottom: 2rem;
}

.ml-6 {
  margin-left: 1.5rem;
}

.mb-20 {
  margin-bottom: 5rem;
}

.ml-1 {
  margin-left: 0.25rem;
}

.ml-4 {
  margin-left: 1rem;
}

.mr-4 {
  margin-right: 1rem;
}

.ml-9 {
  margin-left: 2.25rem;
}

.ml-12 {
  margin-left: 3rem;
}

.mb-10 {
  margin-bottom: 2.5rem;
}

.mt-1 {
  margin-top: 0.25rem;
}

.mr-1 {
  margin-right: 0.25rem;
}

.mt-4 {
  margin-top: 1rem;
}

.mt-2 {
  margin-top: 0.5rem;
}

.block {
  display: block;
}

.flex {
  display: flex;
}

.grid {
  display: grid;
}

.h-screen {
  height: 100vh;
}

.h-\[calc\(100vh-80px\)\] {
  height: calc(100vh - 80px);
}

.h-\[80px\] {
  height: 80px;
}

.h-\[300px\] {
  height: 300px;
}

.h-full {
  height: 100%;
}

.h-\[150px\] {
  height: 150px;
}

.h-72 {
  height: 18rem;
}

.h-28 {
  height: 7rem;
}

.h-24 {
  height: 6rem;
}

.h-20 {
  height: 5rem;
}

.max-h-\[1000px\] {
  max-height: 1000px;
}

.max-h-full {
  max-height: 100%;
}

.min-h-screen {
  min-height: 100vh;
}

.w-screen {
  width: 100vw;
}

.w-full {
  width: 100%;
}

.w-60 {
  width: 15rem;
}

.w-\[650px\] {
  width: 650px;
}

.w-\[300px\] {
  width: 300px;
}

.w-\[350px\] {
  width: 350px;
}

.w-96 {
  width: 24rem;
}

.w-14 {
  width: 3.5rem;
}

.w-48 {
  width: 12rem;
}

.w-4 {
  width: 1rem;
}

.w-28 {
  width: 7rem;
}

.w-44 {
  width: 11rem;
}

.w-56 {
  width: 14rem;
}

.w-80 {
  width: 20rem;
}

.min-w-\[300px\] {
  min-width: 300px;
}

.min-w-\[250px\] {
  min-width: 250px;
}

.max-w-\[1300px\] {
  max-width: 1300px;
}

.max-w-\[1100px\] {
  max-width: 1100px;
}

.max-w-full {
  max-width: 100%;
}

.transform {
  -webkit-transform: var(--tw-transform);
          transform: var(--tw-transform);
}

.cursor-pointer {
  cursor: pointer;
}

.list-none {
  list-style-type: none;
}

.grid-cols-1 {
  grid-template-columns: repeat(1, minmax(0, 1fr));
}

.flex-col {
  flex-direction: column;
}

.flex-wrap {
  flex-wrap: wrap;
}

.content-around {
  align-content: space-around;
}

.items-start {
  align-items: flex-start;
}

.items-center {
  align-items: center;
}

.justify-center {
  justify-content: center;
}

.justify-between {
  justify-content: space-between;
}

.justify-around {
  justify-content: space-around;
}

.justify-evenly {
  justify-content: space-evenly;
}

.justify-items-end {
  justify-items: end;
}

.justify-self-start {
  justify-self: start;
}

.whitespace-nowrap {
  white-space: nowrap;
}

.rounded-\[10rem\] {
  border-radius: 10rem;
}

.rounded-2xl {
  border-radius: 1rem;
}

.rounded-3xl {
  border-radius: 1.5rem;
}

.rounded-xl {
  border-radius: 0.75rem;
}

.rounded-t-3xl {
  border-top-left-radius: 1.5rem;
  border-top-right-radius: 1.5rem;
}

.border-\[10px\] {
  border-width: 10px;
}

.border-4 {
  border-width: 4px;
}

.border-2 {
  border-width: 2px;
}

.border-\[1px\] {
  border-width: 1px;
}

.border-\[0\.1px\] {
  border-width: 0.1px;
}

.border-\[2px\] {
  border-width: 2px;
}

.border-solid {
  border-style: solid;
}

.border-none {
  border-style: none;
}

.border-black {
  --tw-border-opacity: 1;
  border-color: rgba(0, 0, 0, var(--tw-border-opacity));
}

.border-transparent {
  border-color: transparent;
}

.border-blue-800 {
  --tw-border-opacity: 1;
  border-color: rgba(30, 64, 175, var(--tw-border-opacity));
}

.bg-\[\#ce2222\] {
  --tw-bg-opacity: 1;
  background-color: rgba(206, 34, 34, var(--tw-bg-opacity));
}

.bg-blue-500 {
  --tw-bg-opacity: 1;
  background-color: rgba(59, 130, 246, var(--tw-bg-opacity));
}

.bg-orange-600 {
  --tw-bg-opacity: 1;
  background-color: rgba(234, 88, 12, var(--tw-bg-opacity));
}

.bg-\[\#0d0909\] {
  --tw-bg-opacity: 1;
  background-color: rgba(13, 9, 9, var(--tw-bg-opacity));
}

.bg-gray-700 {
  --tw-bg-opacity: 1;
  background-color: rgba(63, 63, 70, var(--tw-bg-opacity));
}

.bg-\[\#e31837\] {
  --tw-bg-opacity: 1;
  background-color: rgba(227, 24, 55, var(--tw-bg-opacity));
}

.bg-transparent {
  background-color: transparent;
}

.bg-\[\#150f0f\] {
  --tw-bg-opacity: 1;
  background-color: rgba(21, 15, 15, var(--tw-bg-opacity));
}

.bg-\[\#d2691e\] {
  --tw-bg-opacity: 1;
  background-color: rgba(210, 105, 30, var(--tw-bg-opacity));
}

.bg-\[\#e01e1e\] {
  --tw-bg-opacity: 1;
  background-color: rgba(224, 30, 30, var(--tw-bg-opacity));
}

.bg-black {
  --tw-bg-opacity: 1;
  background-color: rgba(0, 0, 0, var(--tw-bg-opacity));
}

.bg-\[\#000\] {
  --tw-bg-opacity: 1;
  background-color: rgba(0, 0, 0, var(--tw-bg-opacity));
}

.bg-\[\#0000004f\] {
  background-color: #0000004f;
}

.bg-\[\#0000002d\] {
  background-color: #0000002d;
}

.bg-\[\#00000046\] {
  background-color: #00000046;
}

.bg-\[\#0000002c\] {
  background-color: #0000002c;
}

.bg-\[\#be570d63\] {
  background-color: #be570d63;
}

.bg-\[\#88091c\] {
  --tw-bg-opacity: 1;
  background-color: rgba(136, 9, 28, var(--tw-bg-opacity));
}

.bg-\[\#88091c9a\] {
  background-color: #88091c9a;
}

.bg-\[\#88091cb0\] {
  background-color: #88091cb0;
}

.bg-\[\#ffffff\] {
  --tw-bg-opacity: 1;
  background-color: rgba(255, 255, 255, var(--tw-bg-opacity));
}

.bg-\[\#ca0000\] {
  --tw-bg-opacity: 1;
  background-color: rgba(202, 0, 0, var(--tw-bg-opacity));
}

.bg-white {
  --tw-bg-opacity: 1;
  background-color: rgba(255, 255, 255, var(--tw-bg-opacity));
}

.bg-opacity-5 {
  --tw-bg-opacity: 0.05;
}

.bg-gradient-to-r {
  background-image: linear-gradient(to right, var(--tw-gradient-stops));
}

.from-yellow-400 {
  --tw-gradient-from: #facc15;
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to, rgba(250, 204, 21, 0));
}

.from-gray-50 {
  --tw-gradient-from: #fafafa;
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to, rgba(250, 250, 250, 0));
}

.from-green-400 {
  --tw-gradient-from: #4ade80;
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to, rgba(74, 222, 128, 0));
}

.from-red-500 {
  --tw-gradient-from: #ef4444;
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to, rgba(239, 68, 68, 0));
}

.via-red-500 {
  --tw-gradient-stops: var(--tw-gradient-from), #ef4444, var(--tw-gradient-to, rgba(239, 68, 68, 0));
}

.to-pink-500 {
  --tw-gradient-to: #ec4899;
}

.to-blue-500 {
  --tw-gradient-to: #3b82f6;
}

.bg-cover {
  background-size: cover;
}

.bg-center {
  background-position: center;
}

.p-8 {
  padding: 2rem;
}

.p-4 {
  padding: 1rem;
}

.p-7 {
  padding: 1.75rem;
}

.p-5 {
  padding: 1.25rem;
}

.p-1 {
  padding: 0.25rem;
}

.p-2 {
  padding: 0.5rem;
}

.p-0 {
  padding: 0px;
}

.px-0 {
  padding-left: 0px;
  padding-right: 0px;
}

.py-4 {
  padding-top: 1rem;
  padding-bottom: 1rem;
}

.px-3 {
  padding-left: 0.75rem;
  padding-right: 0.75rem;
}

.py-12 {
  padding-top: 3rem;
  padding-bottom: 3rem;
}

.px-4 {
  padding-left: 1rem;
  padding-right: 1rem;
}

.py-6 {
  padding-top: 1.5rem;
  padding-bottom: 1.5rem;
}

.py-\[calc\(\(100vw-1300px\)\/2\)\] {
  padding-top: calc((100vw - 1300px) / 2);
  padding-bottom: calc((100vw - 1300px) / 2);
}

.py-8 {
  padding-top: 2rem;
  padding-bottom: 2rem;
}

.py-16 {
  padding-top: 4rem;
  padding-bottom: 4rem;
}

.px-20 {
  padding-left: 5rem;
  padding-right: 5rem;
}

.py-14 {
  padding-top: 3.5rem;
  padding-bottom: 3.5rem;
}

.px-64 {
  padding-left: 16rem;
  padding-right: 16rem;
}

.py-\[40px\] {
  padding-top: 40px;
  padding-bottom: 40px;
}

.py-10 {
  padding-top: 2.5rem;
  padding-bottom: 2.5rem;
}

.py-7 {
  padding-top: 1.75rem;
  padding-bottom: 1.75rem;
}

.px-5 {
  padding-left: 1.25rem;
  padding-right: 1.25rem;
}

.px-8 {
  padding-left: 2rem;
  padding-right: 2rem;
}

.py-1 {
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
}

.py-2 {
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
}

.px-6 {
  padding-left: 1.5rem;
  padding-right: 1.5rem;
}

.px-10 {
  padding-left: 2.5rem;
  padding-right: 2.5rem;
}

.px-12 {
  padding-left: 3rem;
  padding-right: 3rem;
}

.px-2 {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}

.text-center {
  text-align: center;
}

.font-serif {
  font-family: ui-serif, Georgia, Cambria, "Times New Roman", Times, serif;
}

.text-5xl {
  font-size: 3rem;
  line-height: 1;
}

.text-\[length\:clamp\(3rem\2c 5vw\2c 5rem\)\] {
  font-size: clamp(3rem,5vw,5rem);
}

.text-2xl {
  font-size: 1.5rem;
  line-height: 2rem;
}

.text-\[length\:clamp\(1\.5rem\2c 8vw\2c 4rem\)\] {
  font-size: clamp(1.5rem,8vw,4rem);
}

.text-\[length\:clamp\(1rem\2c 1\.5vw\2c 2rem\)\] {
  font-size: clamp(1rem,1.5vw,2rem);
}

.text-\[length\:clamp\(1rem\2c 5vw\2c 4rem\)\] {
  font-size: clamp(1rem,5vw,4rem);
}

.text-\[length\:clamp\(2rem\2c 2\.5vw\2c 3rem\)\] {
  font-size: clamp(2rem,2.5vw,3rem);
}

.text-\[2rem\] {
  font-size: 2rem;
}

.text-base {
  font-size: 1rem;
  line-height: 1.5rem;
}

.text-\[1\.7rem\] {
  font-size: 1.7rem;
}

.text-3xl {
  font-size: 1.875rem;
  line-height: 2.25rem;
}

.font-bold {
  font-weight: 700;
}

.font-normal {
  font-weight: 400;
}

.font-extralight {
  font-weight: 200;
}

.font-semibold {
  font-weight: 600;
}

.uppercase {
  text-transform: uppercase;
}

.leading-none {
  line-height: 1;
}

.leading-loose {
  line-height: 2;
}

.tracking-\[3px\] {
  letter-spacing: 3px;
}

.text-white {
  --tw-text-opacity: 1;
  color: rgba(255, 255, 255, var(--tw-text-opacity));
}

.text-black {
  --tw-text-opacity: 1;
  color: rgba(0, 0, 0, var(--tw-text-opacity));
}

.text-\[\#fff\] {
  --tw-text-opacity: 1;
  color: rgba(255, 255, 255, var(--tw-text-opacity));
}

.text-\[\#000\] {
  --tw-text-opacity: 1;
  color: rgba(0, 0, 0, var(--tw-text-opacity));
}

.no-underline {
  text-decoration: none;
}

.shadow-lg {
  --tw-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.shadow-2xl {
  --tw-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.shadow-inner {
  --tw-shadow: inset 0 2px 4px 0 rgba(0, 0, 0, 0.06);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.outline-none {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.outline-black {
  outline: 2px dotted black;
  outline-offset: 2px;
}

.blur-sm {
  --tw-blur: blur(4px);
  -webkit-filter: var(--tw-filter);
          filter: var(--tw-filter);
}

.blur-2xl {
  --tw-blur: blur(40px);
  -webkit-filter: var(--tw-filter);
          filter: var(--tw-filter);
}

.transition {
  transition-property: background-color, border-color, color, fill, stroke, opacity, box-shadow, -webkit-transform, -webkit-filter, -webkit-backdrop-filter;
  transition-property: background-color, border-color, color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: background-color, border-color, color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-transform, -webkit-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.duration-200 {
  transition-duration: 200ms;
}

.duration-75 {
  transition-duration: 75ms;
}

.duration-100 {
  transition-duration: 100ms;
}

.duration-300 {
  transition-duration: 300ms;
}

.duration-500 {
  transition-duration: 500ms;
}

.ease-out {
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
}

.ease-in-out {
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}

.hover\:scale-150:hover {
  --tw-scale-x: 1.5;
  --tw-scale-y: 1.5;
  -webkit-transform: var(--tw-transform);
          transform: var(--tw-transform);
}

.hover\:scale-100:hover {
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  -webkit-transform: var(--tw-transform);
          transform: var(--tw-transform);
}

.hover\:scale-110:hover {
  --tw-scale-x: 1.1;
  --tw-scale-y: 1.1;
  -webkit-transform: var(--tw-transform);
          transform: var(--tw-transform);
}

.hover\:scale-105:hover {
  --tw-scale-x: 1.05;
  --tw-scale-y: 1.05;
  -webkit-transform: var(--tw-transform);
          transform: var(--tw-transform);
}

.hover\:transform:hover {
  -webkit-transform: var(--tw-transform);
          transform: var(--tw-transform);
}

.hover\:cursor-pointer:hover {
  cursor: pointer;
}

.hover\:border-0:hover {
  border-width: 0px;
  border-color: checked;
}

.hover\:bg-trueGray-800:hover {
  --tw-bg-opacity: 1;
  background-color: rgba(38, 38, 38, var(--tw-bg-opacity));
}

.hover\:bg-\[\#ffc500\]:hover {
  --tw-bg-opacity: 1;
  background-color: rgba(255, 197, 0, var(--tw-bg-opacity));
}

.hover\:bg-gray-600:hover {
  --tw-bg-opacity: 1;
  background-color: rgba(82, 82, 91, var(--tw-bg-opacity));
}

.hover\:bg-\[\#0a0707\]:hover {
  --tw-bg-opacity: 1;
  background-color: rgba(10, 7, 7, var(--tw-bg-opacity));
}

.hover\:bg-\[\#130d0d\]:hover {
  --tw-bg-opacity: 1;
  background-color: rgba(19, 13, 13, var(--tw-bg-opacity));
}

.hover\:bg-\[\#130d0d9d\]:hover {
  background-color: #130d0d9d;
}

.hover\:bg-\[\#130d0d6b\]:hover {
  background-color: #130d0d6b;
}

.hover\:bg-\[\#130d0d81\]:hover {
  background-color: #130d0d81;
}

.hover\:bg-\[\#130d0d9c\]:hover {
  background-color: #130d0d9c;
}

.hover\:bg-\[\#130d0db7\]:hover {
  background-color: #130d0db7;
}

.hover\:bg-\[\#130d0de0\]:hover {
  background-color: #130d0de0;
}

.hover\:bg-\[\#d2691e\]:hover {
  --tw-bg-opacity: 1;
  background-color: rgba(210, 105, 30, var(--tw-bg-opacity));
}

.hover\:bg-\[\#be570d\]:hover {
  --tw-bg-opacity: 1;
  background-color: rgba(190, 87, 13, var(--tw-bg-opacity));
}

.hover\:bg-\[\#be570da4\]:hover {
  background-color: #be570da4;
}

.hover\:bg-\[\#be570d52\]:hover {
  background-color: #be570d52;
}

.hover\:bg-\[\#be570d31\]:hover {
  background-color: #be570d31;
}

.hover\:bg-\[\#be570d63\]:hover {
  background-color: #be570d63;
}

.hover\:bg-\[\#e31837\]:hover {
  --tw-bg-opacity: 1;
  background-color: rgba(227, 24, 55, var(--tw-bg-opacity));
}

.hover\:bg-\[\#b9102a\]:hover {
  --tw-bg-opacity: 1;
  background-color: rgba(185, 16, 42, var(--tw-bg-opacity));
}

.hover\:bg-\[\#88091c\]:hover {
  --tw-bg-opacity: 1;
  background-color: rgba(136, 9, 28, var(--tw-bg-opacity));
}

.hover\:bg-\[\#be570d9d\]:hover {
  background-color: #be570d9d;
}

.hover\:bg-\[\#5c0512\]:hover {
  --tw-bg-opacity: 1;
  background-color: rgba(92, 5, 18, var(--tw-bg-opacity));
}

.hover\:bg-\[\#bd0924\]:hover {
  --tw-bg-opacity: 1;
  background-color: rgba(189, 9, 36, var(--tw-bg-opacity));
}

.hover\:bg-\[\#ca0000\]:hover {
  --tw-bg-opacity: 1;
  background-color: rgba(202, 0, 0, var(--tw-bg-opacity));
}

.hover\:bg-\[\#9b0000\]:hover {
  --tw-bg-opacity: 1;
  background-color: rgba(155, 0, 0, var(--tw-bg-opacity));
}

.hover\:bg-\[\#b90000\]:hover {
  --tw-bg-opacity: 1;
  background-color: rgba(185, 0, 0, var(--tw-bg-opacity));
}

.hover\:bg-\[\#aa0000\]:hover {
  --tw-bg-opacity: 1;
  background-color: rgba(170, 0, 0, var(--tw-bg-opacity));
}

.hover\:bg-\[\#a30b22\]:hover {
  --tw-bg-opacity: 1;
  background-color: rgba(163, 11, 34, var(--tw-bg-opacity));
}

.hover\:bg-\[\#c70825\]:hover {
  --tw-bg-opacity: 1;
  background-color: rgba(199, 8, 37, var(--tw-bg-opacity));
}

.hover\:text-white:hover {
  --tw-text-opacity: 1;
  color: rgba(255, 255, 255, var(--tw-text-opacity));
}

.hover\:text-\[\#000\]:hover {
  --tw-text-opacity: 1;
  color: rgba(0, 0, 0, var(--tw-text-opacity));
}

.hover\:text-gray-700:hover {
  --tw-text-opacity: 1;
  color: rgba(63, 63, 70, var(--tw-text-opacity));
}

.hover\:shadow-2xl:hover {
  --tw-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.hover\:blur-sm:hover {
  --tw-blur: blur(4px);
  -webkit-filter: var(--tw-filter);
          filter: var(--tw-filter);
}

.hover\:transition:hover {
  transition-property: background-color, border-color, color, fill, stroke, opacity, box-shadow, -webkit-transform, -webkit-filter, -webkit-backdrop-filter;
  transition-property: background-color, border-color, color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: background-color, border-color, color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-transform, -webkit-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.hover\:duration-500:hover {
  transition-duration: 500ms;
}

.hover\:duration-100:hover {
  transition-duration: 100ms;
}

.hover\:ease-in-out:hover {
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}

.focus\:outline-black:focus {
  outline: 2px dotted black;
  outline-offset: 2px;
}

.focus\:ring-2:focus {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.focus\:ring-purple-600:focus {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgba(147, 51, 234, var(--tw-ring-opacity));
}

@media (min-width: 640px) {
  .sm\:top-2 {
    top: 0.5rem;
  }

  .sm\:left-6 {
    left: 1.5rem;
  }

  .sm\:w-full {
    width: 100%;
  }

  .sm\:w-96 {
    width: 24rem;
  }
}

@media (min-width: 768px) {
  .md\:flex-col {
    flex-direction: column;
  }

  .md\:brightness-150 {
    --tw-brightness: brightness(1.5);
    -webkit-filter: var(--tw-filter);
            filter: var(--tw-filter);
  }

  .md\:brightness-50 {
    --tw-brightness: brightness(.5);
    -webkit-filter: var(--tw-filter);
            filter: var(--tw-filter);
  }
}
